[tool.poetry]
name = "portale-aziendale-backend"
version = "1.0.0"
description = "API Backend per Portale Aziendale con AI e RAG"
authors = ["Portale Aziendale Team <dev@portal.local>"]
package-mode = false

[tool.poetry.dependencies]
python = ">=3.11,<3.13"

# Web Framework
fastapi = "0.104.1"
uvicorn = {extras = ["standard"], version = "0.24.0"}

# Data Validation & Serialization
pydantic = {extras = ["email"], version = "2.5.0"}
pydantic-settings = "2.1.0"

# Database Drivers
motor = "3.3.2"                    # MongoDB async driver
pymongo = "4.6.0"                  # MongoDB sync driver
redis = "4.6.0"                    # Redis cache e sessioni (compatibile con Celery)

# Vector Database
qdrant-client = "1.7.0"            # Qdrant vector database client

# Authentication & Security
python-jose = {extras = ["cryptography"], version = "3.3.0"}  # JWT tokens
passlib = {extras = ["bcrypt"], version = "1.7.4"}            # Password hashing
python-multipart = "0.0.6"        # Form data handling
pyotp = "2.9.0"                    # TOTP for MFA

# Azure OpenAI Integration
openai = "1.3.8"                   # OpenAI client (compatibile con Azure)
tiktoken = "0.5.2"                 # Token counting per OpenAI

# Logging & Monitoring
structlog = "23.2.0"               # Structured logging
python-json-logger = "2.0.7"      # JSON log formatter

# File Processing
aiofiles = "23.2.1"               # Async file handling
python-magic = "0.4.27"           # File type detection

# Configuration
python-dotenv = "1.0.0"           # Environment variables loading

# Performance & Utilities
orjson = "3.9.10"                 # Fast JSON serialization
pytz = "2023.3"                   # Timezone handling
email-validator = "2.1.0"         # Email validation

# CORS Ã¨ gestito da FastAPI CORSMiddleware

# Rate Limiting
slowapi = "0.1.9"                 # Rate limiting per FastAPI

# File Upload Processing
pypdf = "3.17.1"                  # PDF processing
python-docx = "1.1.0"             # DOCX processing
openpyxl = "3.1.2"                # Excel processing
beautifulsoup4 = "4.12.2"         # HTML parsing
lxml = "4.9.3"                    # XML/HTML parser

# Async Task Queue (per future implementazioni)
# celery = {extras = ["redis"], version = "5.3.4"}  # Task queue  
# flower = "2.0.1"                  # Celery monitoring

# Metrics & Health Checks
prometheus-client = "0.19.0"      # Metrics export

# Security Headers
secure = "0.3.0"                  # Security headers middleware

# HTTP Client
httpx = "0.25.2"                  # HTTP client

[tool.poetry.group.dev.dependencies]
# Development & Testing
pytest = "7.4.3"                  # Testing framework
pytest-asyncio = "0.21.1"         # Async testing
httpx = "0.25.2"                  # HTTP client per testing

# Type Checking & Code Quality
mypy = "1.7.1"                    # Static type checking
black = "23.11.0"                 # Code formatting
isort = "5.12.0"                  # Import sorting
flake8 = "6.1.0"                  # Linting

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100
known_first_party = ["app"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.poetry.scripts]
start = "uvicorn app.main:app --reload --host 0.0.0.0 --port 8000"
test = "pytest"
format = "black ."
lint = "flake8 app"
typecheck = "mypy app" 